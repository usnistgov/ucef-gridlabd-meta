class multizone {
	object from;
	object to;
	double ua;
}

class office {
	double floor_area[sf];
	double floor_height[ft];
	double exterior_ua[Btu/degF/h];
	double interior_ua[Btu/degF/h];
	double interior_mass[Btu/degF];
	double glazing[sf];
	double glazing.north[sf];
	double glazing.northeast[sf];
	double glazing.east[sf];
	double glazing.southeast[sf];
	double glazing.south[sf];
	double glazing.southwest[sf];
	double glazing.west[sf];
	double glazing.northwest[sf];
	double glazing.horizontal[sf];
	double glazing.coefficient[pu];
	double occupancy;
	double occupants;
	char256 schedule;
	double air_temperature[degF];
	double mass_temperature[degF];
	double temperature_change[degF/h];
	double outdoor_temperature[degF];
	double Qh[Btu/h];
	double Qs[Btu/h];
	double Qi[Btu/h];
	double Qz[Btu/h];
	enumeration {OFF=0, VENT=5, ECON=4, COOL=3, AUX=2, HEAT=1} hvac_mode;
	double hvac.cooling.balance_temperature[degF];
	double hvac.cooling.capacity[Btu/h];
	double hvac.cooling.capacity_perF[Btu/degF/h];
	double hvac.cooling.design_temperature[degF];
	double hvac.cooling.efficiency[pu];
	double hvac.cooling.cop[pu];
	double hvac.heating.balance_temperature[degF];
	double hvac.heating.capacity[Btu/h];
	double hvac.heating.capacity_perF[Btu/degF/h];
	double hvac.heating.design_temperature[degF];
	double hvac.heating.efficiency[pu];
	double hvac.heating.cop[pu];
	double lights.capacity[kW];
	double lights.fraction[pu];
	double plugs.capacity[kW];
	double plugs.fraction[pu];
	complex demand[kW];
	complex total_load[kW];
	complex energy[kWh];
	double power_factor;
	complex power[kW];
	complex current[A];
	complex admittance[1/Ohm];
	complex hvac.demand[kW];
	complex hvac.load[kW];
	complex hvac.energy[kWh];
	double hvac.power_factor;
	complex lights.demand[kW];
	complex lights.load[kW];
	complex lights.energy[kWh];
	double lights.power_factor;
	double lights.heatgain_fraction;
	double lights.heatgain[kW];
	complex plugs.demand[kW];
	complex plugs.load[kW];
	complex plugs.energy[kWh];
	double plugs.power_factor;
	double plugs.heatgain_fraction;
	double plugs.heatgain[kW];
	double cooling_setpoint[degF];
	double heating_setpoint[degF];
	double thermostat_deadband[degF];
	double control.ventilation_fraction;
	double control.lighting_fraction;
	double ACH;
}

class office {
	double floor_area[sf];
	double floor_height[ft];
	double exterior_ua[Btu/degF/h];
	double interior_ua[Btu/degF/h];
	double interior_mass[Btu/degF];
	double glazing[sf];
	double glazing.north[sf];
	double glazing.northeast[sf];
	double glazing.east[sf];
	double glazing.southeast[sf];
	double glazing.south[sf];
	double glazing.southwest[sf];
	double glazing.west[sf];
	double glazing.northwest[sf];
	double glazing.horizontal[sf];
	double glazing.coefficient[pu];
	double occupancy;
	double occupants;
	char256 schedule;
	double air_temperature[degF];
	double mass_temperature[degF];
	double temperature_change[degF/h];
	double outdoor_temperature[degF];
	double Qh[Btu/h];
	double Qs[Btu/h];
	double Qi[Btu/h];
	double Qz[Btu/h];
	enumeration {OFF=0, VENT=5, ECON=4, COOL=3, AUX=2, HEAT=1} hvac_mode;
	double hvac.cooling.balance_temperature[degF];
	double hvac.cooling.capacity[Btu/h];
	double hvac.cooling.capacity_perF[Btu/degF/h];
	double hvac.cooling.design_temperature[degF];
	double hvac.cooling.efficiency[pu];
	double hvac.cooling.cop[pu];
	double hvac.heating.balance_temperature[degF];
	double hvac.heating.capacity[Btu/h];
	double hvac.heating.capacity_perF[Btu/degF/h];
	double hvac.heating.design_temperature[degF];
	double hvac.heating.efficiency[pu];
	double hvac.heating.cop[pu];
	double lights.capacity[kW];
	double lights.fraction[pu];
	double plugs.capacity[kW];
	double plugs.fraction[pu];
	complex demand[kW];
	complex total_load[kW];
	complex energy[kWh];
	double power_factor;
	complex power[kW];
	complex current[A];
	complex admittance[1/Ohm];
	complex hvac.demand[kW];
	complex hvac.load[kW];
	complex hvac.energy[kWh];
	double hvac.power_factor;
	complex lights.demand[kW];
	complex lights.load[kW];
	complex lights.energy[kWh];
	double lights.power_factor;
	double lights.heatgain_fraction;
	double lights.heatgain[kW];
	complex plugs.demand[kW];
	complex plugs.load[kW];
	complex plugs.energy[kWh];
	double plugs.power_factor;
	double plugs.heatgain_fraction;
	double plugs.heatgain[kW];
	double cooling_setpoint[degF];
	double heating_setpoint[degF];
	double thermostat_deadband[degF];
	double control.ventilation_fraction;
	double control.lighting_fraction;
	double ACH;
}

